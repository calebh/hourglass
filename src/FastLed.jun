module FastLed
open(Prelude)
include("<FastLED.h>")

type fastLedStrip = { ptr : pointer }

type color = { r : uint8; g : uint8; b : uint8 }

fun make(numLeds : uint16) = (
    let p = null;
    #
    CRGB *leds = new CRGB[numLeds];
    p.set((void *) leds);
    FastLED.addLeds<WS2812, 6, RGB>(leds, numLeds);
    #;
    Io:setPinMode(6, Io:output());
    fastLedStrip { ptr = p }
)

fun setLedColor(n : uint16, c, strip) = (
    let fastLedStrip {ptr=p} = strip;
    let p = strip.ptr;
    let r = c.r;
    let g = c.g;
    let b = c.b;
    #((CRGB *) p.get())[n] = CRGB(g, r, b);#
)

fun getLedColor(n : uint16, strip) = (
    let fastLedStrip {ptr=p} = strip;
    let mutable r : uint8 = 0;
    let mutable g : uint8 = 0;
    let mutable b : uint8 = 0;
    #
    CRGB c = ((CRGB *) p.get())[n];
    r = c.r;
    g = c.g;
    b = c.b;
    #;
    color { r=g; g=r; b=b }
)

fun show() : unit =
    #FastLED.show();#
